name: Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

env:
  PYTHONHASHSEED: "42"
  WATCHER_TRAINING__SEED: "42"
  CUBLAS_WORKSPACE_CONFIG: ":4096:8"
  TORCH_DETERMINISTIC: "1"

jobs:
  build-windows-installer:
    name: Build and sign Windows installer
    runs-on: windows-latest
    permissions:
      contents: write
      id-token: write
    outputs:
      artifact-sha256: ${{ steps.artifact-digest.outputs.sha256 }}
    steps:
      - name: Validate SemVer tag
        shell: pwsh
        run: |
          if (-not ($env:GITHUB_REF_NAME -match '^v\d+\.\d+\.\d+$')) {
            Write-Error "Release tag '$env:GITHUB_REF_NAME' must match vMAJOR.MINOR.PATCH"
          }

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: pip
          cache-dependency-path: |
            requirements.txt
            requirements-dev.txt

      - name: Install build dependencies
        shell: pwsh
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
          python -m pip install pyinstaller

      - name: Install SBOM tooling
        shell: pwsh
        run: python -m pip install cyclonedx-bom cyclonedx-py

      - name: Build Windows executable
        shell: pwsh
        run: pyinstaller packaging/watcher.spec --noconfirm

      - name: Generate SBOM
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path dist | Out-Null
          cyclonedx-py environment --format json --output-file dist/Watcher-sbom.json

      - name: Package installer archive
        shell: pwsh
        run: |
          $archive = "dist/Watcher-Setup.zip"
          if (Test-Path $archive) {
            Remove-Item $archive
          }
          Compress-Archive -Path "dist/Watcher/*" -DestinationPath $archive

      - name: Sign release artifact
        uses: sigstore/gh-action@v2.1.1
        with:
          artifact: dist/Watcher-Setup.zip
          bundle: dist/Watcher-Setup.zip.sigstore

      - name: Compute artifact digest
        id: artifact-digest
        shell: pwsh
        run: |
          $hash = Get-FileHash dist/Watcher-Setup.zip -Algorithm SHA256
          "sha256=sha256:$($hash.Hash.ToLower())" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append

      - name: Upload release artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-assets
          if-no-files-found: error
          path: |
            dist/Watcher-Setup.zip
            dist/Watcher-Setup.zip.sigstore
            dist/Watcher-sbom.json

  generate-provenance:
    name: Generate SLSA provenance
    needs: build-windows-installer
    permissions:
      actions: read
      id-token: write
      contents: write
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v1.10.0
    with:
      build-artifacts: release-assets
      provenance-subject-name: Watcher-Setup.zip
      provenance-subject-digest: ${{ needs.build-windows-installer.outputs.artifact-sha256 }}

  publish-release:
    name: Publish GitHub release
    needs:
      - build-windows-installer
      - generate-provenance
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true

      - name: Normalize provenance filename
        run: |
          set -euo pipefail
          PROVENANCE=$(find dist -name "*.intoto.jsonl" -print -quit)
          if [ -z "$PROVENANCE" ]; then
            echo "Provenance file not found" >&2
            exit 1
          fi
          mv "$PROVENANCE" dist/Watcher-Setup.intoto.jsonl

      - name: Publish GitHub release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Watcher ${{ github.ref_name }}
          generate_release_notes: true
          draft: false
          prerelease: false
          fail_on_unmatched_files: true
          files: |
            dist/Watcher-Setup.zip
            dist/Watcher-Setup.zip.sigstore
            dist/Watcher-sbom.json
            dist/Watcher-Setup.intoto.jsonl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
