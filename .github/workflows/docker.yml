name: Docker image

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  build-and-push:
    name: Build and publish image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/watcher
          tags: |
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
            type=ref,event=tag,pattern=v*

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: mode=max

      - name: Install Cosign
        uses: sigstore/cosign-installer@v3

      - name: Sign published images
        env:
          TAGS: ${{ steps.meta.outputs.tags }}
        run: |
          mkdir -p cosign-bundles
          tags="${TAGS//,/ }"
          for image in $tags; do
            if [ -n "$image" ]; then
              sanitized=$(echo "$image" | tr '/:' '__')
              cosign sign --yes --keyless --bundle "cosign-bundles/${sanitized}.sigstore" "$image"
            fi
          done

      - name: Upload Cosign bundles artifact
        uses: actions/upload-artifact@v4
        with:
          name: cosign-bundles
          path: cosign-bundles

      - name: Attach bundles to GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          tag="${GITHUB_REF_NAME}"
          if gh release view "$tag" >/dev/null 2>&1; then
            gh release upload "$tag" cosign-bundles/*.sigstore --repo "$GITHUB_REPOSITORY" --clobber
          else
            echo "No GitHub Release found for tag $tag, skipping upload."
          fi
