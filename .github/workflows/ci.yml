name: CI

on:
  push:
  pull_request:

jobs:
  quality:
    name: Quality checks
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.12"]
    env:
      PYTHONHASHSEED: "0"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
          cache-dependency-path: |
            requirements.txt
            requirements-dev.txt

      - name: Prepare cache directories
        run: mkdir -p .dvc/cache
        shell: bash

      - name: Cache DVC artifacts
        uses: actions/cache@v4
        with:
          path: .dvc/cache
          key: dvc-${{ runner.os }}-${{ hashFiles('dvc.lock', 'dvc.yaml', '.dvc/config') }}
          restore-keys: |
            dvc-${{ runner.os }}-

      - name: Install tooling
        run: |
          python -m pip install --upgrade pip
          python -m pip install nox dvc

      - name: Pull data artifacts
        run: dvc pull
        continue-on-error: true

      - name: Run quality pipeline
        run: nox -s lint typecheck security tests build

  sbom:
    name: Generate SBOM
    runs-on: ubuntu-latest
    needs: quality
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: pip
          cache-dependency-path: |
            requirements.txt
            requirements-dev.txt

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt -r requirements-dev.txt cyclonedx-bom

      - name: Generate SBOM
        run: cyclonedx-py --resolve-env --format json --output sbom.json

      - name: Upload SBOM artifact
        uses: actions/upload-artifact@v4
        with:
          name: sbom
          path: sbom.json
