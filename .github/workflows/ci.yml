name: CI

on:
  push:
  pull_request:

jobs:
  quality:
    name: Quality checks
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.12"]
    env:
      PYTHONHASHSEED: "0"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
          cache-dependency-path: |
            requirements.txt
            requirements-dev.txt

      - name: Prepare cache directories
        run: mkdir -p .dvc/cache
        shell: bash

      - name: Cache DVC artifacts
        uses: actions/cache@v4
        with:
          path: .dvc/cache
          key: dvc-${{ runner.os }}-${{ hashFiles('dvc.lock', 'dvc.yaml', '.dvc/config') }}
          restore-keys: |
            dvc-${{ runner.os }}-

      - name: Install tooling
        run: |
          python -m pip install --upgrade pip
          python -m pip install nox dvc

      - name: Pull data artifacts
        run: dvc pull
        continue-on-error: true

      - name: Run Windows installer
        if: runner.os == 'Windows'
        shell: pwsh
        run: ./installer.ps1 -SkipOllama

      - name: Smoke test launcher in headless mode
        if: runner.os == 'Windows'
        shell: pwsh
        env:
          DISPLAY: ""
        run: |
          $script = Join-Path $PWD.Path 'run.ps1'
          $job = Start-Job -ScriptBlock { param($path) & $path } -ArgumentList $script
          Start-Sleep -Seconds 5
          if ($job.State -eq 'Failed') {
            Receive-Job -Job $job | Out-String | Write-Host
            throw 'run.ps1 failed to start.'
          }
          if ($job.State -eq 'Completed') {
            $output = Receive-Job -Job $job | Out-String
            Write-Host $output
            throw 'run.ps1 exited prematurely.'
          }
          Stop-Job -Job $job | Out-Null
          Receive-Job -Job $job | Out-String | Write-Host
          Remove-Job -Job $job

      - name: Run quality pipeline
        run: nox -s lint typecheck security tests build
