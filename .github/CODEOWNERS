# Consultez docs/merge-policy.md pour comprendre la gouvernance des revues,
# la cartographie des labels `scope:*` et la procédure d'automatisation.
# Chaque équipe référencée doit exister dans l'organisation GitHub hébergeant
# ce dépôt et être autorisée à relire les zones assignées.

# Couverture par défaut : toute modification doit être validée par les mainteneurs.
*                         @WatcherOrg/maintainers

# scope:app-experience — Application Watcher (API, UI, packaging client)
app/                      @WatcherOrg/app-core
app/api/                  @WatcherOrg/app-core
app/ui/                   @WatcherOrg/design-system
packaging/                @WatcherOrg/app-core

# scope:platform — Automatisation, CI/CD et outillage développeur
.github/workflows/        @WatcherOrg/platform-engineering
.github/auto_merge.yml    @WatcherOrg/platform-engineering
automation-playbook.sh    @WatcherOrg/platform-engineering
auto_flow.sh              @WatcherOrg/platform-engineering
noxfile.py                @WatcherOrg/platform-engineering
scripts/                  @WatcherOrg/platform-engineering
Makefile                  @WatcherOrg/platform-engineering
requirements*.txt         @WatcherOrg/platform-engineering
installer.ps1             @WatcherOrg/platform-engineering
run.ps1                   @WatcherOrg/platform-engineering

# scope:data-insights — Données, entraînement et pipelines ML
datasets/                 @WatcherOrg/ml-research
metrics/                  @WatcherOrg/ml-research
train.py                  @WatcherOrg/ml-research
dvc.yaml                  @WatcherOrg/ml-research
params.yaml               @WatcherOrg/ml-research

# scope:documentation — Documentation produit et gouvernance
README.md                 @WatcherOrg/documentation
CHANGELOG.md              @WatcherOrg/documentation
ETHICS.md                 @WatcherOrg/documentation
docs/                     @WatcherOrg/documentation
METRICS.md                @WatcherOrg/documentation
QA.md                     @WatcherOrg/documentation

# scope:security — Configuration sensible et secrets
config/                   @WatcherOrg/security-team
plugins.toml              @WatcherOrg/security-team
example.env               @WatcherOrg/security-team

# scope:quality — Tests, contrôle qualité et couverture
pytest.ini                @WatcherOrg/qa
tests/                    @WatcherOrg/qa

# Infrastructure GitHub (templates, CODEOWNERS, règles)
.github/ISSUE_TEMPLATE/   @WatcherOrg/maintainers
.github/CODEOWNERS        @WatcherOrg/maintainers
